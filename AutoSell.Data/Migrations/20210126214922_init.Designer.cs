// <auto-generated />
using System;
using AutoSell.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoSell.Data.Migrations
{
    [DbContext(typeof(AutoSellContext))]
    [Migration("20210126214922_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AutoSell.Data.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemStatusId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 1, 26, 21, 49, 22, 66, DateTimeKind.Utc).AddTicks(4407),
                            ItemStatusId = 1,
                            LastUpdated = new DateTime(2021, 1, 26, 21, 49, 22, 66, DateTimeKind.Utc).AddTicks(4692)
                        });
                });

            modelBuilder.Entity("AutoSell.Data.Models.ItemStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemsStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 1, 26, 21, 49, 22, 64, DateTimeKind.Utc).AddTicks(9642),
                            LastUpdated = new DateTime(2021, 1, 26, 21, 49, 22, 65, DateTimeKind.Utc).AddTicks(36),
                            Status = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 1, 26, 21, 49, 22, 65, DateTimeKind.Utc).AddTicks(380),
                            LastUpdated = new DateTime(2021, 1, 26, 21, 49, 22, 65, DateTimeKind.Utc).AddTicks(383),
                            Status = "Not Available"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 1, 26, 21, 49, 22, 65, DateTimeKind.Utc).AddTicks(385),
                            LastUpdated = new DateTime(2021, 1, 26, 21, 49, 22, 65, DateTimeKind.Utc).AddTicks(386),
                            Status = "Sold"
                        });
                });

            modelBuilder.Entity("AutoSell.Data.Models.Item", b =>
                {
                    b.HasOne("AutoSell.Data.Models.ItemStatus", "ItemStatus")
                        .WithMany()
                        .HasForeignKey("ItemStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
